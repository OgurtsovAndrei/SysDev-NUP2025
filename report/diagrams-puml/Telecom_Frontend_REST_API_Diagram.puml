@startuml Telecom_Frontend_REST_API_Diagram

top to bottom direction
skinparam wrapWidth 200

' =================== FRONTEND PACKAGES ===================
package "Frontend" {
  package "View" #lightpink {
    class UserDashboardView {
      +renderUserProfile()
      +renderUsageData()
      +renderPackages()
      +renderBillingInfo()
    }

    class PackageView {
      +renderAvailablePackages()
      +renderPackageDetails()
      +renderOrderForm()
      +renderPromoCodeInput()
    }

    class SupportView {
      +renderTicketList()
      +renderTicketDetails()
      +renderCreateTicketForm()
      +renderChatInterface()
    }

    class FeedbackView {
      +renderFeedbackForm()
      +renderThankYouPage()
    }

    class LoginView {
      +renderLoginForm()
      +renderRegistrationForm()
      +renderForgotPasswordForm()
    }

    class CommonComponents {
      +renderHeader()
      +renderFooter()
      +renderNavigation()
      +renderNotification()
      +renderLoading()
      +renderError()
    }
  }

  package "Controller" #lightyellow {
    class UserController {
      +registerUser(userData)
      +loginUser(credentials)
      +logoutUser()
      +getUserProfile()
      +updateUserProfile(userData)
      +handleRegistrationForm()
      +handleLoginForm()
      +handleProfileUpdateForm()
    }

    class PackageController {
      +getPackageTypes()
      +getPackageOptions(typeId)
      +validatePromoCode(code)
      +orderPackage(packageData)
      +handlePackageSelection()
      +handlePromoCodeValidation()
      +handlePackageOrder()
    }

    class UsageController {
      +getUserUsageData()
      +refreshUsageData()
      +handleUsageDataFilters()
      +initializeUsagePage()
      +createPackageSection(pkg)
      +deletePackage(packageId)
    }

    class SupportController {
      +getSupportTickets()
      +createSupportTicket(ticketData)
      +updateSupportTicket(ticketId, data)
      +getChatHistory()
      +sendChatMessage(message)
      +handleTicketForm()
      +handleChatInput()
    }

    class FeedbackController {
      +submitFeedback(feedbackData)
      +handleFeedbackForm()
    }
  }

  package "Model" #lightgreen {
    class ApiService {
      +get(endpoint, params)
      +post(endpoint, data)
      +put(endpoint, data)
      +delete(endpoint)
      +handleApiResponse(response)
      +getAuthHeaders()
    }

    class UserModel {
      +loginUser(email, password, rememberMe)
      +registerUser(fullName, email, password, confirmPassword, agreeTerms)
      +getUserProfile()
      +updateUserProfile(profileData)
      +getUserSupportTickets()
      +getUserNotifications()
      +markNotificationAsRead(notificationId)
    }

    class PackageModel {
      +getPackageTypes()
      +getPackageOptions(packageTypeId)
      +validatePromoCode(promoCode)
      +submitOrder(orderDetails)
    }

    class UsageModel {
      +getUserUsage()
      +deletePackage(packageId)
    }

    class FeedbackModel {
      +getFeedbackSummary()
      +submitFeedback(feedbackData)
    }

    class ChatModel {
      +getChatHistory()
      +sendChatMessage(messageText)
    }
  }
}

' =================== API ROUTES ===================
interface "API ROUTES" as ApiRoutes #orange {
  /users/**
  /packages/**
  /usage/**
  /tickets/**
  /chat/**
  /feedback/**
}

' =================== FRONTEND RELATIONSHIPS ===================

' Frontend View to Frontend Controller relationships (Dependency)
UserDashboardView "1" ..> "1" UserController : uses (1-to-1)
UserDashboardView "1" ..> "1" UsageController : uses (1-to-1)
UserDashboardView "1" ..> "1" PackageController : uses (1-to-1)

PackageView "1" ..> "1" PackageController : uses (1-to-1)
SupportView "1" ..> "1" SupportController : uses (1-to-1)
FeedbackView "1" ..> "1" FeedbackController : uses (1-to-1)
LoginView "1" ..> "1" UserController : uses (1-to-1)

' Frontend Controller to Frontend Model relationships (Dependency)
UserController "1" ..> "1" UserModel : uses (1-to-1)
PackageController "1" ..> "1" PackageModel : uses (1-to-1)
UsageController "1" ..> "1" UsageModel : uses (1-to-1)
SupportController "1" ..> "1" UserModel : uses (1-to-1)
SupportController "1" ..> "1" ChatModel : uses (1-to-1)
FeedbackController "1" ..> "1" FeedbackModel : uses (1-to-1)

' Frontend Model to API Service relationships (Dependency)
UserModel "1" ..> "1" ApiService : uses (1-to-1)
PackageModel "1" ..> "1" ApiService : uses (1-to-1)
UsageModel "1" ..> "1" ApiService : uses (1-to-1)
FeedbackModel "1" ..> "1" ApiService : uses (1-to-1)
ChatModel "1" ..> "1" ApiService : uses (1-to-1)

' Common Components relationships (Composition)
CommonComponents "1" *-- "1" UserDashboardView : included in (1-to-1)
CommonComponents "1" *-- "1" PackageView : included in (1-to-1)
CommonComponents "1" *-- "1" SupportView : included in (1-to-1)
CommonComponents "1" *-- "1" FeedbackView : included in (1-to-1)
CommonComponents "1" *-- "1" LoginView : included in (1-to-1)

' Cross-layer relationships (Dependency)
ApiService "1" ..> "1" ApiRoutes : sends requests to (1-to-1)

@enduml
